
worker_processes  1;

events {
    worker_connections  1024;
}


http {

    # access_log off;
    # error_log off;

    sendfile        on;
    keepalive_timeout  65;

    #HTTPs
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # Use only TLS
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Tell client which ciphers are available
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
        # Use our own DH params
        ssl_dhparam /etc/letsencrypt/dhparam.pem;

        # Enable OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/lets-encrypt-x3-cross-signed.pem;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;
        # Optimize session cache
        ssl_session_cache   shared:SSL:40m;
        ssl_session_timeout 4h;
        # Enable session tickets
        ssl_session_tickets on;

        client_max_body_size 50m;

        ssl_certificate /etc/letsencrypt/live/@@DOMAIN@@/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/@@DOMAIN@@/privkey.pem;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_pass http://@@BACKEND@@$request_uri;
            resolver @@RESOLVER@@;
        }
    }

    #HTTP
    server {
        listen 80;
        listen [::]:80;
        
        #Store Let's Encrypt challenges locally
        root '/var/letsencrypt';
        location '/.well-known/acme-challenge' {
            default_type "text/plain";
        }
        
        # Redirect HTTP requests to HTTPS
        location / {
            return 301 https://@@DOMAIN@@$request_uri;
        }
    }
}